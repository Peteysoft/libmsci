#include <stdio.h>
#include <stdlib.h>

#include <unistd.h>
#include <sys/resource.h>
#include <wait.h>

using namespace std;
using namespace libpetey;

//#include "kextreme.h"

template<class type>
void kleast(type *data, long n, long k);

#define MAXN 100000

//simple executable that takes a list of numbers and spits out the
//k least

int main(int argc, char **argv) {
  float * data, *x;
  long k;
  long n;
  float *result;
  FILE *fs;

  if (argc < 2) {
    printf("Usage: kleast k [file]\n");
    exit(1);
  }

  sscanf(argv[1], "%d", &k);

  if (argc > 2) fs=fopen(argv[2], "r"); else fs=stdin;

  //result=new float[k];
  data=new float[MAXN];

  n=0;
  while(feof(fs) == 0) {
    fscanf(fs, "%g", data+n);
    //printf("%f\n", data[n]);
    n++;
  }
  fclose(fs);

  kleast(data, n, k);

  for (long i=0; i<k; i++) printf("%g\n", data[i]);

  //delete [] result;
  delete [] data;

}


