#include <math.h>
#include <stdio.h>
#include <gsl/gsl_sf_erf.h>

#include "gsl/gsl_fit.h"

#include "erfinv.h"

int main() {
  int n=100;

  double x[n];
  double x1;
  double y[n];

  //double xmin=0.001;
  double xmin=0.1;
  double xmax=10;

  for (int i=0; i<n; i++) {
    //x[i]=xmax-xmin*pow(xmax/xmin, 1.*(n-i-1.)/(n-1.))+xmin;
    x[i]=xmin+(xmax-xmin)*i/(n-1);
    y[i]=gsl_sf_erf(x[i]);
    x1=erfinv_basic2(y[i]);
    printf("%14.10g %14.10g %14.10g %10.3g\n", x[i], y[i], x1, x[i]-x1);
  }

  return 0;

  printf("#define ERFINV_NTABLE %d\n", n);

  printf("double erfinv_ytable[ERFINV_NTABLE+1]={0.");
  for (int i=0; i<n; i++) printf(", %30.25g", x[i]);
  printf("};\n");

  printf("double erfinv_xtable[ERFINV_NTABLE]={0.");
  for (int i=0; i<n; i++) printf(", %30.25f", y[i]);
  printf("};\n");


  //for values above 4, we fit an asymptotic function:
  double xtailmin=4.;
  double xtailmax=5.9;
  int ntail=20.;
  double a, b;
  double lna;
  double cov00, cov01, cov11;
  double sumsqr;

  double xtail[ntail];
  double ytail[ntail];
  double yfit;
  double xfit[ntail];
  double ytrue;

  for (int i=0; i<ntail; i++) {
    xtail[i]=xtailmin+(xtailmax-xtailmin)*i/(ntail-1);
    ytail[i]=log(1-gsl_sf_erf(xtail[i]));
    printf("%lg %lg\n", xtail[i], 1-gsl_sf_erf(xtail[i]));
  }

  gsl_fit_linear(ytail, 1, xtail, 1, ntail, &a, &b, &cov00, &cov01, &cov11, &sumsqr);
  lna=log(a);
  printf("a=%g; b=%g\n", a, b);

  for (int i=0; i<ntail; i++) {
    yfit=1-lna*exp(b*xtail[i]);
    ytrue=gsl_sf_erf(xtail[i]);
    printf("%10.6g %14.10g %14.10g %10.3g\n", xtail[i], ytrue, yfit, ytrue-yfit);
    xfit[i]=a+b*log(1-ytrue);
    //xfit[i]=(log(1-ytrue)-a)/b;
  }
  for (int i=0; i<ntail; i++) {
    printf("%14.10g %14.10g %10.3g\n", xtail[i], xfit[i], xtail[i]-xfit[i]);
  }

}
