SHELL=/bin/bash

#file paths:
#VFIELD_TGRID=sixhour
VFIELD_TGRID=oneday
#DATA_PATH = /home/Peter/data/ncep/oneday
#DATA_PATH = /cygdrive/e/data/ncep/$(VFIELD_TGRID)
DATA_PATH = /home/peter/data/ncep_data/daily/plev
VFIELD_PATH=.
#to make it easier to clone this directory:
MASTER=.
#MASTER=/home/lenovo/my_software/libmsci/ctraj/scripts/pc_proxy
#work directory:
WORK=work

#extent of velocity field:
#(take two years of data and keep it local to guarantee no more stupid
#range errors...)
#T0=1998/1/1
#TF=1999/12/31
#take three years of data for some "spin up" for traditional proxy:
T0=1997/1/1
TF=1999/12/31

#extent of tracer mapping:
#T0a= 1998/12/1
#TFa= 1999/4/1
#take three years of data for some "spin up" for traditional proxy:
T0a = 1997/1/1
#T0a = 1998/6/1
TFa= 1999/1/1

#interpolate POAM data between these two dates:
#T0b= 1998/11/1
#TFb= 1998/12/30
#T0b= 1998/9/12
#T0b= 1998/9/26
T0b= 1998/9/29
#TFb= 1998/11/17
TFb= 1998/12/25

#T0b= 1999/2/1
#TFb= 1999/3/25

#specifications for tracer simulation:
#vertical level:
THETA = 500

#grid points per side
NGRID = 50
#"coarse" (Eulerian) time step
TSTEP = 1
#"fine" (Lagrangian) Runge-Kutta time step
NFINE = 20

#diffusion coefficient:
#DCOEF=20000
DCOEF=-1

#parameters for interpolation:
#use PC proxy? (or proxy tracer)
PC=1
#PC=

#parameters for proxy tracer:
#order of the method:
ORDER = 2

#parameters for PC proxy:
#size of measurement window
WINDOW=1
#integration time:
INT_T=60
#lead time same as integration time:
LEAD=$(INT_T)

#number of principal components to use:
NEV = 5
#number of Arnoldi vectors to use in calculating PCs:
NCV = 25

#add constant term when performing regressions:
#KFLAG = -K

#validation options:
#limit interpolates to  this hemisphere
HEMI1 =
#limit validation to this hemisphere
HEMI2 = $(HEMI1)
#remove zero values from radiosonded data:
TTHRESH="-G 0"
#exclude measurement stations above this (absolute) latitude:
LATTHRESH=50
LATMIN=$(LATTHRESH)
LATMAX=-$(LATTHRESH)
#LATBAND = -I $(LATMIN) -F $(LATMAX)
LATBAND = 

#experiment: log everything to a single file and use the parameters as
#a "key":
#make sure parameters are in a common format:
T0_1!=date_calc $(T0)
TF_1!=date_calc $(TF)
T0a_1!=date_calc $(T0a)
TFa_1!=date_calc $(TFa)
T0b_1!=date_calc $(T0b)
TFb_1!=date_calc $(TFb)

#different arguments depending on whether we're using traditional proxy tracer
#or PC proxy:
ifdef PC
  #command to calculate interpolates:
  PROXY_COMMAND=pc_proxy_predict
  #arguments only used for PC proxy:
  PC_ARGS = $(INT_T)
  #options to PROXY_COMMAND:
  PROXY_OPTIONS=$(KFLAG) -v $(NEV) -A $(NCV) -l $(LEAD) $(HEMI1)
  #base name of output files:
  #BASE=$(THETA)K$(shell date_calc -f "%Y.%m.%d" $(T0b))-$(shell date_calc -f "%Y.%m.%d" $(TFb))pc$(NEV)A$(NCV)S$(INT_T)l$(LEAD)w$(WINDOW)$(HEMI1)
  #proxy field:
  PROXYFILE=$(CVMAT)
  #create the "key":
  KEY = $(strip "theta=$(THETA);data-path=$(DATA_PATH);interpolates=$(T0b_1):$(TFb_1);ngrid=$(NGRID);tstep=$(TSTEP);nfine=$(NFINE);dcoef=$(DCOEF);integration=$(INT_T);lead=$(LEAD);eigenvalues=$(NEV);Arnoldi-vectors=$(NCV);window=$(WINDOW);$(HEMI1)")

  #cross-validated proxy tracers:
  PROXY1=$(WORK)/proxy1$(HEMI1)_$(WINDOW)_$(NEV).vec
  PROXY2=$(WORK)/proxy2$(HEMI1)_$(WINDOW)_$(NEV).vec
  #corresponding dates:
  PDATES1=$(WORK)/pdates1$(HEMI1)_$(WINDOW)_$(NEV).txt
  PDATES2=$(WORK)/pdates2$(HEMI1)_$(WINDOW)_$(NEV).txt

  #cross-validation results:
  XVRESULTS=xvresults$(HEMI1)_$(WINDOW)_$(NEV).txt
else
  #command to calculate interpolates:
  PROXY_COMMAND=proxy_tracer
  #options to PROXY_COMMAND:
  PROXY_OPTIONS=$(HEMI1) -o $(ORDER)
  #base name of output files:
  #BASE=o$(ORDER)_$(HEMI1)$(THETA)K
  #proxy field:
  PROXYFILE=$(PROXY_FIELD)
  #create the "key":
  KEY = $(strip "theta=$(THETA);data-path=$(DATA_PATH);interpolates=$(T0b_1):$(TFb_1);ngrid=$(NGRID);tstep=$(TSTEP);nfine=$(NFINE);dcoef=$(DCOEF);order=$(ORDER);window=$(WINDOW);$(HEMI1)")

  #cross-validated proxy tracers:
  PROXY1=$(WORK)/proxy1$(HEMI1)_$(WINDOW).vec
  PROXY2=$(WORK)/proxy2$(HEMI1)_$(WINDOW).vec
  #corresponding dates:
  PDATES1=$(WORK)/pdates1$(HEMI1)_$(WINDOW).txt
  PDATES2=$(WORK)/pdates2$(HEMI1)_$(WINDOW).txt

  #cross-validation results:
  XVRESULTS=xvresults$(HEMI1)_$(WINDOW).txt
endif

#file names:

#data files:
SONDE_DATA = $(MASTER)/o3soundings$(THETA)K.txt
POAM_DATA = $(MASTER)/POAMIII_$(THETA)K.txt

#converted velocity fields:
VBASE=$(THETA)K$(VFIELD_TGRID)$(shell date_calc -f "%Y.%m.%d" $(T0))-$(shell date_calc -f "%Y.%m.%d" $(TF))
VFIELD_N=$(VFIELD_PATH)/vfield_ncep_$(VBASE)_N.ds
VFIELD_S=$(VFIELD_PATH)/vfield_ncep_$(VBASE)_S.ds

#tracer mapping:
ifeq ($(strip $(DCOEF)),-1)
  MAPBASE=$(THETA)K$(VFIELD_TGRID)$(shell date_calc -f "%Y.%m.%d" $(T0a))-$(shell date_calc -f "%Y.%m.%d" $(TFa))n$(NGRID)dt$(TSTEP)h$(NFINE)
  TRACER_OPT=-n $(NGRID) -h $(TSTEP) -k $(NFINE)
else
  MAPBASE=$(THETA)K$(VFIELD_TGRID)$(shell date_calc -f "%Y.%m.%d" $(T0a))-$(shell date_calc -f "%Y.%m.%d" $(TFa))n$(NGRID)dt$(TSTEP)h$(NFINE)d$(DCOEF)
  TRACER_OPT=-n $(NGRID) -h $(TSTEP) -k $(NFINE) -V 3 -C $(DCOEF)
endif
CVMAT=$(WORK)/matO3_$(MAPBASE).dat
#corresponsing dates:
DATES=$(WORK)/datesO3_$(MAPBASE).txt

#for "classic" proxy tracer:
#passive proxy tracer field:
PROXY_FIELD = $(WORK)/proxy_$(MAPBASE).vec

#name of final output files:
INDEX=index.txt
INDEX_OLD=index.old
INDEX_NEW=index.new
CHECK!=grep -n $(KEY)$$ $(INDEX)
ifndef CHECK
ID!=date +%Y.%m.%d.%H.%M.%S
else
LINENO=$(word 1, $(subst :, ,$(CHECK)))
ID!=head -n $$(( $(LINENO) - 1 )) $(INDEX) | tail -n 1
endif

#base name of final output files:
BASE=$(ID)
PROXY_O3 = $(WORK)/proxyO3_$(BASE).vec
PROXY_DATES = $(WORK)/proxyO3_$(BASE).txt
RESULTS=results$(BASE).txt

all: $(RESULTS)
	more $(RESULTS)

ifndef CHECK
$(RESULTS): $(PROXY_O3) $(PROXY_DATES) $(SONDE_DATA)
	echo $(ID) >> $(INDEX)
	echo $(KEY) >> $(INDEX)
	tracer_interpolate -t 24 -P \
		$(TTHRESH) $(LATBAND) $(HEMI2) -i $(T0b) -f $(TFb) \
		$(PROXY_O3) $(PROXY_DATES) $(SONDE_DATA) > $(RESULTS)
else
$(RESULTS): $(PROXY_O3) $(PROXY_DATES) $(SONDE_DATA)
	tracer_interpolate -t 24 -P \
		$(TTHRESH) $(LATBAND) $(HEMI2) -i $(T0b) -f $(TFb) \
		$(PROXY_O3) $(PROXY_DATES) $(SONDE_DATA) > $(RESULTS)
endif

ifdef CHECK
delete: $(RESULTS)
	rm -f $(PROXY_O3)
	rm -f $(PROXY_DATES)
	sed "$$(( $(LINENO) - 1 )),$(LINENO)d" $(INDEX) > $(INDEX_NEW)
	#in case something goes wrong:
	mv $(INDEX) $(INDEX_OLD)
	#because otherwise we get a big, fat nothing:
	mv $(INDEX_NEW) $(INDEX)
endif

T0i=$(T0b)
TFi=$(TFb)

restrict: $(RESULTS)
	tracer_interpolate -t 24 -P \
		$(TTHRESH) $(LATBAND) $(HEMI2) -i $(T0i) -f $(TFi) \
		$(PROXY_O3) $(PROXY_DATES) $(SONDE_DATA)

cross_validate: $(XVRESULTS)
	more $(XVRESULTS)

#either build the cross-validation results together or don't subject it
#to versioning:
#ifndef CHECK
$(XVRESULTS): $(PROXY1) $(PROXY2) $(PDATES1) $(PDATES2) file1.txt file2.txt
	tracer_interpolate -t 20 -P \
		$(TTHRESH) $(HEMI2) $(LATBAND) -i $(T0b) -f $(TFb) \
		$(PROXY2) $(PDATES2) file1.txt > $(XVRESULTS)
	tracer_interpolate -t 20 -P \
		$(TTHRESH) $(HEMI2) $(LATBAND) -i $(T0b) -f $(TFb) \
		$(PROXY1) $(PDATES1) file2.txt >> $(XVRESULTS)
#endif

clean:
	rm -f *$(BASE)*
	rm -f $(CVMAT)
	rm -f $(PROXY_FIELD)
	rm -f $(DATES)
	rm -f $(WORK)/file?.txt

$(PROXY2) $(PDATES2): $(WORK)/file2.txt $(PROXYFILE) $(DATES)
	$(PROXY_COMMAND) $(PROXY_OPTIONS) -t 20 -i $(T0b) -f $(TFb) \
		$(PROXYFILE) $(DATES) $(WORK)/file2.txt \
		$(PC_ARGS) $(WINDOW) $(PROXY2) > $(PDATES2) 

$(PROXY1) $(PDATES1): $(WORK)/file1.txt $(PROXYFILE) $(DATES)
	$(PROXY_COMMAND) $(PROXY_OPTIONS) -t 20 -i $(T0b) -f $(TFb) \
		$(PROXYFILE) $(DATES) $(WORK)/file1.txt \
		$(PC_ARGS) $(WINDOW) $(PROXY1) > $(PDATES1)

$(WORK)/file1.txt $(WORK)/file2.txt: $(POAM_DATA)
	split_file $(POAM_DATA) $(WORK)/file1.txt $(WORK)/file2.txt

$(SONDE_DATA): $(SONDE_DATA).gz
	gunzip -c $(SONDE_DATA).gz > $(SONDE_DATA)

$(PROXY_O3) $(PROXY_DATES): $(PROXYFILE) $(DATES) $(POAM_DATA)
	$(PROXY_COMMAND) -t 20 -i $(T0b) -f $(TFb) $(PROXY_OPTIONS) \
		$(PROXYFILE) $(DATES) $(POAM_DATA) \
		$(PC_ARGS) $(WINDOW) $(PROXY_O3) > $(PROXY_DATES)

$(POAM_DATA): $(POAM_DATA).gz
	gunzip -c $(POAM_DATA).gz > $(POAM_DATA)

$(CVMAT) $(DATES): $(VFIELD_S) $(VFIELD_N)
	if [ ! -d $(WORK) ]; then mkdir $(WORK); fi
	ctraj_tracer $(TRACER_OPT) -i $(T0a) -f $(TFa) \
		$(VFIELD_S) $(VFIELD_N) $(CVMAT) > $(DATES)

#$(DATES): $(VFIELD_S) $(VFIELD_N)
#	ctraj_tracer -Q -n $(NGRID) -h $(TSTEP) -k $(NFINE) \
#		-i $(T0a) -f $(TFa) $(VFIELD_S) $(VFIELD_N) > $(DATES)

#classic proxy tracer:

#generate the passive tracer fields that serve as the proxy:
$(PROXY_FIELD): $(CVMAT)
	zonally_symmetric_tracer | lla2aeb -n $(NGRID) $(PROXY_FIELD).a
	tracer_step2_w_renorm $(CVMAT) $(PROXY_FIELD).a
	eq_lat $(PROXY_FIELD).a $(PROXY_FIELD)
	
#extract the velocity fields:
$(VFIELD_N) $(VFIELD_S):
	nc2ds -i $(T0) -f $(TF) -p $(DATA_PATH) -T $(THETA) $(VFIELD_S) $(VFIELD_N)
 
#$(VFIELD_N) $(VFIELD_S):
#	make -C ../test vfield YEAR=$(YEAR) LEV=$(THETA) \
#		DATAPATH=$(DATA_PATH) VFIELD_PATH=$(VFIELD_PATH)
 

